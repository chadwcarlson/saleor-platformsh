name: 'saleor'

type: 'python:3.8'

variables:
    env: 
        USE_DEMO_DATA: true
        NODE_VERSION: !include
            type: string
            path: saleor/.nvmrc

relationships:
    database: "dbb:postgresql"
    rediscache: "cacheredis:redis"

hooks:
    build: !include
        type: string
        path: scripts/_build.sh
    deploy: !include
        type: string
        path: scripts/_deploy.sh

web:
    upstream:
        socket_family: unix
    commands:
        start: "cd ~/$PLATFORM_APPLICATION_NAME && poetry run gunicorn --bind unix:$SOCKET --workers 4 --worker-class uvicorn.workers.UvicornWorker saleor.asgi:application"
    locations:
        "/":
            passthru: true
        "/static":
            expires: 1h
            allow: true

# The size of the persistent disk of the application (in MB).
disk: 1024

# Set a local R/W mount for logs
mounts:
    'saleor/media':
        source: local
        source_path: 'saleor/media'
    '/.demo':
        source: local
        source_path: '.demo'

source:
    operations:
        upstream_update: 
            command: ./upstreams/update.sh $UPSTREAM
        update_dependencies:
            command: |
                set -e
                cd saleor && poetry update

# crons:
#     update_saleor:
#         cmd: |
#             UPDATE_BRANCH=$(cat upstreams/versions.json | jq -r '.branch')
#             if [ "$PLATFORM_BRANCH" = $UPDATE_BRANCH ]; then
#                 platform environment:sync code data --no-wait --yes
#                 platform source-operation:run upstream_update --variable env:UPSTREAM=saleor --no-wait --yes
#             fi
#     update_minimal_variant_prices:
#         spec: '0 3 * * *'
#         cmd: 'poetry run python ~/$PLATFORM_APPLICATION_NAME/manage.py update_all_products_minimal_variant_prices'
#     update_exchange_rates:
#         spec: '30 3 * * *'
#         cmd: 'poetry run python ~/$PLATFORM_APPLICATION_NAME/manage.py update_exchange_rates --all'
